apiVersion: apps/v1
kind: Deployment
metadata:
  name: quant-framework-app
  namespace: quant-framework
  labels:
    app: quant-framework-app
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: quant-framework-app
  template:
    metadata:
      labels:
        app: quant-framework-app
        component: backend
    spec:
      containers:
      - name: app
        image: quant-framework:latest
        ports:
        - containerPort: 8000
        env:
        - name: QUANT_ENV
          valueFrom:
            configMapKeyRef:
              name: quant-framework-config
              key: QUANT_ENV
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: quant-framework-config
              key: DEBUG
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: quant-framework-secrets
              key: SECRET_KEY
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: quant-framework-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: quant-framework-secrets
              key: REDIS_URL
        - name: CELERY_BROKER_URL
          valueFrom:
            secretKeyRef:
              name: quant-framework-secrets
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            secretKeyRef:
              name: quant-framework-secrets
              key: CELERY_RESULT_BACKEND
        - name: TUSHARE_TOKEN
          valueFrom:
            secretKeyRef:
              name: quant-framework-secrets
              key: TUSHARE_TOKEN
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: quant-framework-config
              key: LOG_LEVEL
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: quant-framework-config
              key: API_PORT
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: data
          mountPath: /app/data
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: logs
        emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: app-data-pvc
      initContainers:
      - name: migrate
        image: quant-framework:latest
        command: ["python", "-m", "alembic", "upgrade", "head"]
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: quant-framework-secrets
              key: DATABASE_URL

---
apiVersion: v1
kind: Service
metadata:
  name: quant-framework-app
  namespace: quant-framework
  labels:
    app: quant-framework-app
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: quant-framework-app

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-data-pvc
  namespace: quant-framework
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: shared-storage

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: quant-framework-app-hpa
  namespace: quant-framework
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: quant-framework-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80