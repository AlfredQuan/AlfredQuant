apiVersion: v1
kind: ConfigMap
metadata:
  name: quant-framework-config
  namespace: quant-framework
data:
  QUANT_ENV: "production"
  DEBUG: "false"
  LOG_LEVEL: "WARNING"
  LOG_FORMAT: "json"
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  WORKER_PROCESSES: "8"
  WORKER_CONNECTIONS: "2000"
  DB_POOL_SIZE: "30"
  DB_MAX_OVERFLOW: "50"
  REDIS_MAX_CONNECTIONS: "100"
  CELERY_WORKER_PREFETCH_MULTIPLIER: "4"
  FEATURE_ENABLE_SSL: "true"
  FEATURE_ENABLE_RATE_LIMITING: "true"
  FEATURE_ENABLE_MONITORING: "true"
  FEATURE_ENABLE_AUDIT_LOGGING: "true"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: quant-framework
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 4096;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;

        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        upstream app_backend {
            server quant-framework-app:8000;
        }

        server {
            listen 80;
            server_name _;

            location / {
                root /usr/share/nginx/html;
                index index.html index.htm;
                try_files $uri $uri/ /index.html;
            }

            location /api/ {
                proxy_pass http://app_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location /ws/ {
                proxy_pass http://app_backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location /health {
                proxy_pass http://app_backend/health;
                access_log off;
            }
        }
    }