apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: quant-framework-backend\n  namespace: quant-framework\n  labels:\n    app: quant-framework\n    component: backend\n    version: v1\nspec:\n  replicas: 3\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      app: quant-framework\n      component: backend\n  template:\n    metadata:\n      labels:\n        app: quant-framework\n        component: backend\n        version: v1\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"8000\"\n        prometheus.io/path: \"/metrics\"\n    spec:\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                - key: app\n                  operator: In\n                  values:\n                  - quant-framework\n                - key: component\n                  operator: In\n                  values:\n                  - backend\n              topologyKey: kubernetes.io/hostname\n      containers:\n      - name: backend\n        image: your-registry.com/quant-framework:latest\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 8000\n          name: http\n          protocol: TCP\n        env:\n        - name: DATABASE_URL\n          valueFrom:\n            secretKeyRef:\n              name: quant-framework-secrets\n              key: DATABASE_URL\n        - name: REDIS_URL\n          valueFrom:\n            secretKeyRef:\n              name: quant-framework-secrets\n              key: REDIS_URL\n        - name: SECRET_KEY\n          valueFrom:\n            secretKeyRef:\n              name: quant-framework-secrets\n              key: SECRET_KEY\n        - name: TUSHARE_TOKEN\n          valueFrom:\n            secretKeyRef:\n              name: quant-framework-secrets\n              key: TUSHARE_TOKEN\n        envFrom:\n        - configMapRef:\n            name: quant-framework-config\n        resources:\n          requests:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n          limits:\n            memory: \"4Gi\"\n            cpu: \"2000m\"\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8000\n          initialDelaySeconds: 120\n          periodSeconds: 30\n          timeoutSeconds: 10\n          failureThreshold: 3\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 8000\n          initialDelaySeconds: 60\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        volumeMounts:\n        - name: logs\n          mountPath: /app/logs\n        - name: cache\n          mountPath: /app/data/cache\n        - name: config\n          mountPath: /app/config\n          readOnly: true\n      volumes:\n      - name: logs\n        persistentVolumeClaim:\n          claimName: quant-framework-logs\n      - name: cache\n        emptyDir:\n          sizeLimit: 1Gi\n      - name: config\n        configMap:\n          name: quant-framework-config\n      imagePullSecrets:\n      - name: registry-secret\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: quant-framework-worker\n  namespace: quant-framework\n  labels:\n    app: quant-framework\n    component: worker\n    version: v1\nspec:\n  replicas: 2\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      app: quant-framework\n      component: worker\n  template:\n    metadata:\n      labels:\n        app: quant-framework\n        component: worker\n        version: v1\n    spec:\n      containers:\n      - name: worker\n        image: your-registry.com/quant-framework:latest\n        imagePullPolicy: Always\n        command: [\"celery\"]\n        args: [\"-A\", \"quant_framework.core.celery\", \"worker\", \"--loglevel=info\", \"--concurrency=8\", \"--max-tasks-per-child=1000\"]\n        env:\n        - name: DATABASE_URL\n          valueFrom:\n            secretKeyRef:\n              name: quant-framework-secrets\n              key: DATABASE_URL\n        - name: REDIS_URL\n          valueFrom:\n            secretKeyRef:\n              name: quant-framework-secrets\n              key: REDIS_URL\n        - name: SECRET_KEY\n          valueFrom:\n            secretKeyRef:\n              name: quant-framework-secrets\n              key: SECRET_KEY\n        - name: TUSHARE_TOKEN\n          valueFrom:\n            secretKeyRef:\n              name: quant-framework-secrets\n              key: TUSHARE_TOKEN\n        envFrom:\n        - configMapRef:\n            name: quant-framework-config\n        resources:\n          requests:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n          limits:\n            memory: \"4Gi\"\n            cpu: \"2000m\"\n        volumeMounts:\n        - name: logs\n          mountPath: /app/logs\n        - name: cache\n          mountPath: /app/data/cache\n      volumes:\n      - name: logs\n        persistentVolumeClaim:\n          claimName: quant-framework-logs\n      - name: cache\n        emptyDir:\n          sizeLimit: 2Gi\n      imagePullSecrets:\n      - name: registry-secret\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: quant-framework-beat\n  namespace: quant-framework\n  labels:\n    app: quant-framework\n    component: beat\n    version: v1\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: quant-framework\n      component: beat\n  template:\n    metadata:\n      labels:\n        app: quant-framework\n        component: beat\n        version: v1\n    spec:\n      containers:\n      - name: beat\n        image: your-registry.com/quant-framework:latest\n        imagePullPolicy: Always\n        command: [\"celery\"]\n        args: [\"-A\", \"quant_framework.core.celery\", \"beat\", \"--loglevel=info\"]\n        env:\n        - name: DATABASE_URL\n          valueFrom:\n            secretKeyRef:\n              name: quant-framework-secrets\n              key: DATABASE_URL\n        - name: REDIS_URL\n          valueFrom:\n            secretKeyRef:\n              name: quant-framework-secrets\n              key: REDIS_URL\n        - name: SECRET_KEY\n          valueFrom:\n            secretKeyRef:\n              name: quant-framework-secrets\n              key: SECRET_KEY\n        envFrom:\n        - configMapRef:\n            name: quant-framework-config\n        resources:\n          requests:\n            memory: \"512Mi\"\n            cpu: \"250m\"\n          limits:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n        volumeMounts:\n        - name: logs\n          mountPath: /app/logs\n        - name: beat-schedule\n          mountPath: /app/celerybeat-schedule\n      volumes:\n      - name: logs\n        persistentVolumeClaim:\n          claimName: quant-framework-logs\n      - name: beat-schedule\n        persistentVolumeClaim:\n          claimName: quant-framework-beat-schedule\n      imagePullSecrets:\n      - name: registry-secret\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: quant-framework-frontend\n  namespace: quant-framework\n  labels:\n    app: quant-framework\n    component: frontend\n    version: v1\nspec:\n  replicas: 2\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      app: quant-framework\n      component: frontend\n  template:\n    metadata:\n      labels:\n        app: quant-framework\n        component: frontend\n        version: v1\n    spec:\n      containers:\n      - name: frontend\n        image: your-registry.com/quant-framework-frontend:latest\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 80\n          name: http\n          protocol: TCP\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"250m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 30\n          periodSeconds: 30\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 10\n          periodSeconds: 10\n          timeoutSeconds: 3\n          failureThreshold: 3\n      imagePullSecrets:\n      - name: registry-secret\n